@model WorkforceManagement.Models.ViewModels.HomeView

@{
    ViewData["Title"] = "Home Page";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<div>
    <label asp-for="Departments" class="control-label"></label>
    <select asp-for="DepartmentId" asp-items="@Model.DepartmentOptions" id="DepartmentSelector"></select>
</div>

<canvas id="myChart"></canvas>

<script>
    // Get reference to the select list
    var selectList = document.querySelector("#DepartmentSelector");
    selectList.addEventListener('change', (event) => {
        // make fetch call to the API Controller to get back JSON
        GetDeptInfo(parseInt(event.target.value));
    });

    let employeeLabels = []
    let employeeData = []

    var ctx = document.getElementById('myChart').getContext('2d');
    var chart;

    function GetDeptInfo(id) {
        return fetch("http://localhost:5000/api/chart/" + id)
            .then(response => response.json())
            .then((response) => {
                employeeLabels = response.map(employee => `${employee.firstName} ${employee.lastName}`);
                employeeData = response.map(employee => employee.totalTrainingPrograms);

                if (chart) { chart.destroy(); }

                chart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'bar',

                // The data for our dataset
                data: {
                    labels: employeeLabels,
                    datasets: [{
                        barPercentage: 0.5,
                        barThickness: 6,
                        maxBarThickness: 8,
                        minBarLength: 2,
                        data: employeeData,
                        //backgroundColor: 'rgb(0,0,0,0.3)'
                    }]
                },

                // Configuration options go here
                    options: {
                        legend: {
                            display: false,
                        },
                        title: {
                            display: true,
                            text: 'Training Programs per Employee'
                        },
                        scales: {
                          yAxes: [{
                            ticks: {
                              beginAtZero: true,
                              callback: function(value) {if (value % 1 === 0) {return value;}}
                            }
                          }]
                        }
                    }
                });
                
            });
    }

    
    
</script>
